{"version":3,"sources":["Converter.js","serviceWorker.js","index.js"],"names":["Converter","props","state","arrow","option","vector","dataNum1","dataNum2","firstType","secondType","getOption","bind","Clear","handleNum1","handleNum2","setFirstType","setSecondType","getCoef","e","this","setState","target","value","number","coef","class","type","name","id","onClick","for","placeholder","onChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec219405.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Converter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n       arrow: \"==\",\r\n       option: 0, //какой режим выбран (длина, температура, скорость)\r\n       vector: 1, // \"направление\" конвертации - из первого поля во второе или со второго в первое (определяется автоматически)\r\n       dataNum1: 0, //значения из полей\r\n       dataNum2: 0,\r\n       firstType: 0, //значения из величин\r\n       secondType: 0\r\n    }\r\n    this.getOption = this.getOption.bind(this);\r\n    this.Clear = this.Clear.bind(this);\r\n    this.handleNum1 = this.handleNum1.bind(this);\r\n    this.handleNum2 = this.handleNum2.bind(this);\r\n    this.setFirstType = this.setFirstType.bind(this);\r\n    this.setSecondType = this.setSecondType.bind(this);\r\n    this.getCoef = this.getCoef.bind(this);\r\n  };\r\n  getOption(e){  //получить режим работы\r\n      this.setState({\r\n        option: e.target.value,\r\n        dataNum1: 0,\r\n        dataNum2: 0,\r\n        firstType: 0,\r\n        secondType: 0\r\n      });\r\n  }\r\n  Clear(){ //выполнить обнуление переменных\r\n    this.setState({\r\n      dataNum1: 0,\r\n      dataNum2: 0,\r\n      firstType: 0,\r\n      secondType: 0\r\n    });\r\n  }\r\n  handleNum1(e) {  //получить значение из первого поля \r\n    this.setState({\r\n        vector: 1,\r\n        arrow: \"==>\", \r\n        dataNum1: e.target.value,\r\n        dataNum2: this.getCoef(e.target.value, this.state.option, this.state.firstType, this.state.secondType)\r\n      });\r\n  }\r\n  handleNum2(e) {  //получить значение со второго поля\r\n    this.setState({\r\n        vector: 2,\r\n        arrow: \"<==\",\r\n        dataNum1: this.getCoef(e.target.value, this.state.option, this.state.secondType, this.state.firstType),\r\n        dataNum2: e.target.value\r\n      });\r\n  }\r\n  setFirstType(e){ //получить первую единицу измерения\r\n    this.setState({firstType: e.target.value})\r\n    if(this.state.vector==1){\r\n      this.setState({dataNum2: this.getCoef(this.state.dataNum1, this.state.option, e.target.value, this.state.secondType)})\r\n    }\r\n    else if(this.state.vector==2){\r\n      this.setState({dataNum1: this.getCoef(this.state.dataNum2, this.state.option, e.target.value, this.state.secondType)})\r\n    }\r\n  }\r\n  setSecondType(e){  //получить вторую единицу измерения\r\n    this.setState({secondType: e.target.value});\r\n    if(this.state.vector==1){\r\n      this.setState({dataNum2: this.getCoef(this.state.dataNum1, this.state.option, this.state.firstType, e.target.value)})\r\n    }\r\n    else if(this.state.vector==2){\r\n      this.setState({dataNum1: this.getCoef(this.state.dataNum2, this.state.option, this.state.firstType, e.target.value)})\r\n    }\r\n  }\r\n\r\n  getCoef(number, option, firstType, secondType){ //получить результат (в зависимости от режима работы и единиц измерения)\r\n    var coef= 0;\r\n    if(firstType == 0 || secondType==0){coef= number*0} //если не выбрана одна из единиц измерения\r\n    else if(firstType == secondType){coef=number*1};    //если обе единицы измерения равны\r\n\r\n    if(option ==1){       //Если расчитываем длинну\r\n      if(firstType ==1 && secondType==2){coef= number* 1.0936132983377}           //метры в ярды\r\n      else if(firstType ==1 && secondType==3){coef= number* 0.00067487312385272}  //метры в мили\r\n\r\n      else if(firstType ==2 && secondType==1){coef= number* 0.9144}               //ярды в метры\r\n      else if(firstType ==2 && secondType==3){coef= number* 0.00061710398445092}  //ярды в мили\r\n\r\n      else if(firstType ==3 && secondType==1){coef= number* 1481.76}              //мили в метры\r\n      else if(firstType ==3 && secondType==2){coef= number* 1620.4724409449}      //мили в ярды\r\n    }\r\n    else if(option ==2){  //Если расчитываем температуру\r\n      if(firstType ==1 && secondType==3){coef= (number*1.8)+32}                   //Цельсий в Фаренгейт\r\n      else if(firstType ==1 && secondType==2){coef= +number+ +273.15}             //Цельсий в Кельвин\r\n\r\n      else if(firstType ==2 && secondType==1){coef= number-273.15}                //Кельвин в Цельсий\r\n      else if(firstType ==2 && secondType==3){coef= (number-273.15)*1.8}          //Кельвин в Фаренгейт\r\n\r\n      else if(firstType ==3 && secondType==1){coef= (number-32)/1.8}              //Фаренгейт в Цельсий\r\n      else if(firstType ==3 && secondType==2){coef= ((number-32)/1.8)+273.15}     //Фаренгейт в Кельвин\r\n    }\r\n    else if(option==3){   //Если расчитываем Скорость\r\n      if(firstType ==1 && secondType==2){coef= (number/1.609)}                    //км/ч в миль/ч\r\n      else if(firstType ==1 && secondType==3){coef= (number/3.6)}                 //км/ч в м/с\r\n\r\n      else if(firstType ==2 && secondType==1){coef= (number*1.609)}               //миль/ч в км/ч\r\n      else if(firstType ==2 && secondType==3){coef= (number/2.237)}               //миль/ч в м/с\r\n\r\n      else if(firstType ==3 && secondType==1){coef= (number*3.6)}                 //м/с в км/ч\r\n      else if(firstType ==3 && secondType==2){coef= (number*2.237)}               //м/с в миль/ч\r\n    }\r\n    return coef;\r\n  }\r\n  render() {\r\n      return (\r\n                <div class=\"tabbed\">\r\n                  <input type=\"radio\" name=\"tabs\" id=\"tab-nav-1\" value=\"1\" onClick={this.getOption}/>\r\n                  <label for=\"tab-nav-1\">Длина</label>\r\n                  <input type=\"radio\" name=\"tabs\" id=\"tab-nav-2\" value=\"2\" onClick={this.getOption}/>\r\n                  <label for=\"tab-nav-2\">Температура</label>\r\n                  <input type=\"radio\" name=\"tabs\" id=\"tab-nav-3\" value=\"3\" onClick={this.getOption}/>\r\n                  <label for=\"tab-nav-3\">Скорость</label>\r\n                  <div class=\"tabs\">\r\n                    <div>\r\n                          <h2>Конвертировать Длину</h2>\r\n                          <input \r\n                            class=\"form\" \r\n                            type=\"number\" \r\n                            name=\"num1\" \r\n                            placeholder=\"Введите число\"\r\n                            onChange = {this.handleNum1}\r\n                            value={this.state.dataNum1}\r\n                          />\r\n                          <select \r\n                            class=\"select\" \r\n                            name=\"type1\"\r\n                            onChange={this.setFirstType}\r\n                          >\r\n                              <option value=\"0\" >---</option>\r\n                              <option value=\"1\">Метры</option>\r\n                              <option value=\"2\">Ярды</option>\r\n                              <option value=\"3\">Мили</option>\r\n                          </select>\r\n                          {this.state.arrow}\r\n                          <input \r\n                                class=\"form\" \r\n                                type=\"number\" \r\n                                name=\"num2\" \r\n                                placeholder=\"Результат\"\r\n                                onChange = {this.handleNum2}\r\n                                value={this.state.dataNum2}\r\n                          />\r\n                          <select \r\n                            class=\"select\" \r\n                            name=\"type2\"\r\n                            onChange={this.setSecondType}\r\n                          >\r\n                              <option value=\"0\" >---</option>\r\n                              <option value=\"1\">Метры</option>\r\n                              <option value=\"2\">Ярды</option>\r\n                              <option value=\"3\">Мили</option>\r\n                          </select>\r\n                          <input type=\"submit\" class=\"button\" onClick={this.Clear} value=\"Очистить\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Конвертировать Температуру</h2>\r\n                        <input \r\n                            class=\"form\" \r\n                            type=\"number\" \r\n                            name=\"num1\" \r\n                            placeholder=\"Введите число\"\r\n                            onChange = {this.handleNum1}\r\n                            value={this.state.dataNum1}\r\n                          />\r\n                          <select \r\n                            class=\"select\" \r\n                            name=\"type1\"\r\n                            onChange={this.setFirstType}\r\n                          >\r\n                              <option value=\"0\" >---</option>\r\n                              <option value=\"1\">Цельсий</option>\r\n                              <option value=\"2\">Кельвин</option>\r\n                              <option value=\"3\">Фаренгейт</option>\r\n                          </select>\r\n                          {this.state.arrow}\r\n                          <input \r\n                                class=\"form\" \r\n                                type=\"number\" \r\n                                name=\"num2\" \r\n                                placeholder=\"Результат\"\r\n                                onChange = {this.handleNum2}\r\n                                value={this.state.dataNum2}\r\n                          />\r\n                          <select \r\n                            class=\"select\" \r\n                            name=\"type2\"\r\n                            onChange={this.setSecondType}\r\n                          >\r\n                              <option value=\"0\" >---</option>\r\n                              <option value=\"1\">Цельсий</option>\r\n                              <option value=\"2\">Кельвин</option>\r\n                              <option value=\"3\">Фаренгейт</option>\r\n                          </select>\r\n                          <input type=\"submit\" class=\"button\" onClick={this.Clear} value=\"Очистить\"/>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Конвертировать Скорость</h2>\r\n                        <input \r\n                            class=\"form\" \r\n                            type=\"number\" \r\n                            name=\"num1\" \r\n                            placeholder=\"Введите число\"\r\n                            onChange = {this.handleNum1}\r\n                            value={this.state.dataNum1}\r\n                          />\r\n                          <select \r\n                            class=\"select\" \r\n                            name=\"type1\"\r\n                            onChange={this.setFirstType}\r\n                          >\r\n                              <option value=\"0\" >---</option>\r\n                              <option value=\"1\">км/ч</option>\r\n                              <option value=\"2\">миль/ч</option>\r\n                              <option value=\"3\">м/с</option>\r\n                          </select>\r\n                          {this.state.arrow}\r\n                          <input \r\n                                class=\"form\" \r\n                                type=\"number\" \r\n                                name=\"num2\" \r\n                                placeholder=\"Результат\"\r\n                                onChange = {this.handleNum2}\r\n                                value={this.state.dataNum2}\r\n                          />\r\n                          <select \r\n                            class=\"select\" \r\n                            name=\"type2\"\r\n                            onChange={this.setSecondType}\r\n                          >\r\n                              <option value=\"0\" >---</option>\r\n                              <option value=\"1\">км/ч</option>\r\n                              <option value=\"2\">миль/ч</option>\r\n                              <option value=\"3\">м/с</option>\r\n                          </select>\r\n                          <input type=\"submit\" class=\"button\" onClick={this.Clear} value=\"Очистить\"/>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n      );\r\n    }\r\n}\r\nexport default Converter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Converter from './Converter';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Converter />, document.getElementById('conv'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}